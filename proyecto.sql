-- ENTIDADES
create table colores (
    id_color NUMBER GENERATED BY DEFAULT AS IDENTITY,
    color varchar(50) unique,
    PRIMARY KEY ( id_color )
);
select*from colores;
commit work;


CREATE TABLE deporte (
    id_deporte  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre      VARCHAR2(50) unique NOT NULL,
    color      VARCHAR2(50) unique NOT NULL,
    imagen      VARCHAR2(50)  NULL,
    PRIMARY KEY ( id_deporte )
);

select * from deporte;
commit work;

CREATE TABLE membresia (
    id_membresia  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre      VARCHAR2(50) NOT NULL,
    precio      NUMBER NOT NULL,
    
    PRIMARY KEY ( id_membresia )
);

--insert into membresia (nombre,precio) VALUES('silver',900);
--insert into membresia (nombre,precio) VALUES('gold',450);
--insert into membresia (nombre,precio) VALUES('bronze',150);
select *from membresia;
commit work;

CREATE TABLE temporada (
    id_temporada  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre      VARCHAR2(50) unique NOT NULL,
    fecha_inicio      date NULL,
    fecha_fin      date NULL,
    PRIMARY KEY ( id_temporada )
);
--delete from temporada;
select * from temporada;
commit work;



CREATE TABLE fase (
    id_fase  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre      varchar(50) not null,
    descripcion varchar(100) default null,
    PRIMARY KEY ( id_fase )
);


--insert into fase (nombre,descripcion) VALUES ('activa','Se pueden crear eventos y predicciones');
--insert into fase (nombre,descripcion) VALUES ('calculo','Luego de finalizar, pero el admin no ha ingresado los resultado de los eventos');
--insert into fase (nombre,descripcion) VALUES ('finalizada','Al finalizar de ingresar resultados');
select * from fase;
commit work;


CREATE TABLE jornada (
    id_jornada  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    numero_jornada number not null,
    estado      number DEFAULT 1,
    fecha_inicio   date null,
    fecha_fin      date NULL,
    id_fase     number not null,
    id_temporada number not null,
    PRIMARY KEY ( id_jornada),
    CONSTRAINT fk_fase  FOREIGN KEY (id_fase) REFERENCES fase(id_fase),
    CONSTRAINT fk_temporada  FOREIGN KEY (id_temporada) REFERENCES temporada(id_temporada)
);
select * from jornada;
commit work;


CREATE TABLE equipo (
    id_equipo  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre      varchar(50) unique not null,
    imagen      varchar (100) null,
    PRIMARY KEY ( id_equipo )
);
select * from equipo;
commit work;


create table partido(
    id_partido  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    
    equipo_local number not null,
    equipo_visitante number not null,
    
    puntos_local number not null,
    puntos_visitante number not null,
    
    fecha_partido date not null,
    id_deporte number not null,
    id_jornada number not null,
    PRIMARY KEY (id_partido),
    CONSTRAINT fk_local  FOREIGN KEY (equipo_local) REFERENCES equipo(id_equipo),
    CONSTRAINT fk_visitante  FOREIGN KEY (equipo_visitante) REFERENCES equipo(id_equipo),
    CONSTRAINT fk_deporte  FOREIGN KEY (id_deporte) REFERENCES deporte(id_deporte),
    CONSTRAINT fk_jornada  FOREIGN KEY (id_jornada) REFERENCES jornada(id_jornada) 
);


--execute insert_partido('Kylie Peerless','Ollie Worden',8,4,'03/02/2019 11:29','golf',1,'2019-Q2');
--delete from partido;
select * from partido;
commit work;


-- alter table partido add id_jornada number not null;
-- ALTER TABLE partido ADD CONSTRAINT fk_jor  FOREIGN KEY (id_jornada)  REFERENCES jornada(id_jornada);


create table usuario(
    id_usuario  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    username    varchar(50) unique not null,
    nombre      varchar(50) not null,
    apellido    varchar(50) not null,
    fecha_nacimiento date  null,
    fecha_registro date  null,
    correo      varchar(50) unique null,
    foto_perfil varchar(250) null,
    contrasena varchar(500) not null,
    PRIMARY KEY (id_usuario)
);
--delete from usuario;
select * from usuario;
commit work;

 

create table registro_membresia (
    id_usuario number not null,
    id_temporada number not null,
    id_membresia number not null,
    primary key(id_usuario,id_temporada),
    CONSTRAINT fk_user  FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario),
    CONSTRAINT fk_temp  FOREIGN KEY (id_temporada) REFERENCES temporada(id_temporada),
    CONSTRAINT fk_membre  FOREIGN KEY (id_membresia) REFERENCES membresia(id_membresia)
);

select * from registro_membresia;
--delete from  registro_membresia;
commit work;

create table puntaje(
    id_usuario number not null,
    id_temporada number not null,
    p10 number default 0,
    p5 number default 0,
    p3 number default 0,
    p0 number default 0,
    puntos number not null,
    
    primary key(id_usuario,id_temporada),
    CONSTRAINT fk_usu  FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario),
    CONSTRAINT fk_tem  FOREIGN KEY (id_temporada) REFERENCES temporada(id_temporada)
);
drop table puntaje purge;
select * from puntaje;
commit work;



create table recompensa(
    id_usuario number not null,
    id_temporada number not null,

    recompensa number not null,
    primary key(id_usuario,id_temporada),
    CONSTRAINT fk_usuar  FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario),
    CONSTRAINT fk_tempor  FOREIGN KEY (id_temporada) REFERENCES temporada(id_temporada)

);


select * from recompensa;
commit work;


create table prediccion(
    id_usuario number not null,
    id_partido number not null,
    
    puntos_local number null,
    puntos_visitante number null,
    puntos number default 0,
    primary key(id_usuario,id_partido),
    CONSTRAINT fk_us  FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario),
    CONSTRAINT fk_partido  FOREIGN KEY (id_partido) REFERENCES partido(id_partido)
    
);

select * from prediccion;

commit work;
select * from equipo;




select id_usuario from usuario where username = 'Admin';



--select to_char(sysdate, 'HH24:MI:SS') from dual;
select*from prediccion;

/*
drop table ayuda purge;
drop table puntaje purge;
drop table recompensa purge;
drop table registro_membresia purge;
drop table prediccion purge;
drop table usuario purge;
drop table partido purge;
drop table jornada purge;
drop table temporada purge;
drop table deporte purge;
drop table equipo purge;


commit work:
*/
select * from temporada; //10645
select id_jornada from jornada where id_temporada = 10645;//25 26 27 34
select id_partido,puntos_local,puntos_visitante from partido where id_jornada = 25;


commit work:


-- LIMPIAR tablas 
/*
delete from puntaje ;
delete from recompensa ;
delete from registro_membresia ;
delete from prediccion ;

delete from usuario where username != 'Admin';
select * from usuario;
delete from partido ;
delete from jornada ;
delete from temporada ;

insert into colores(color) values ('aliceblue');
insert into colores(color) values ('antiquewhite');
insert into colores(color) values ('aqua');
insert into colores(color) values ('aquamarine');
insert into colores(color) values ('azure');
insert into colores(color) values ('beige');
insert into colores(color) values ('bisque');
insert into colores(color) values ('black');
insert into colores(color) values ('blanchedalmond');
insert into colores(color) values ('blue');
insert into colores(color) values ('blueviolet');
insert into colores(color) values ('brown');
insert into colores(color) values ('burlywood');
insert into colores(color) values ('cadetblue');
insert into colores(color) values ('chartreuse');
insert into colores(color) values ('chocolate');
insert into colores(color) values ('coral');
insert into colores(color) values ('cornflowerblue');
insert into colores(color) values ('cornsilk');
insert into colores(color) values ('crimson');
insert into colores(color) values ('cyan');
insert into colores(color) values ('darkblue');
insert into colores(color) values ('darkcyan');
insert into colores(color) values ('darkgoldenrod');
insert into colores(color) values ('darkgreen');
insert into colores(color) values ('darkkhaki');
insert into colores(color) values ('darkmagenta');
insert into colores(color) values ('darkolivegreen');
insert into colores(color) values ('darkorange');
insert into colores(color) values ('darkorchid');
insert into colores(color) values ('darkred');
insert into colores(color) values ('darksalmon');
insert into colores(color) values ('darkseagreen');
insert into colores(color) values ('darkslateblue');
insert into colores(color) values ('darkturquoise');
insert into colores(color) values ('darkviolet	');
insert into colores(color) values ('deeppink');
insert into colores(color) values ('deepskyblue');
insert into colores(color) values ('dodgerblue');
insert into colores(color) values ('firebrick');
insert into colores(color) values ('floralwhite');
insert into colores(color) values ('forestgreen');
insert into colores(color) values ('fuchsia');
insert into colores(color) values ('gainsboro');
insert into colores(color) values ('ghostwhite');
insert into colores(color) values ('gold');
insert into colores(color) values ('goldenrod');
insert into colores(color) values ('green');
insert into colores(color) values ('greenyellow');
insert into colores(color) values ('honeydew');
insert into colores(color) values ('hotpink');
insert into colores(color) values ('indianred');
insert into colores(color) values ('indigo');
insert into colores(color) values ('ivory');
insert into colores(color) values ('khaki');
insert into colores(color) values ('lavender');
insert into colores(color) values ('lavenderblush');
insert into colores(color) values ('lawngreen');
insert into colores(color) values ('lemonchiffon');
insert into colores(color) values ('lightcoral');
insert into colores(color) values ('lightcyan');
insert into colores(color) values ('lightgoldenrodyellow');
insert into colores(color) values ('lightgreen');
insert into colores(color) values ('lightpink');
insert into colores(color) values ('lightsalmon');
insert into colores(color) values ('lightseagreen');
insert into colores(color) values ('lightskyblue');
insert into colores(color) values ('limegreen');
insert into colores(color) values ('magenta');
insert into colores(color) values ('mediumaquamarine');
insert into colores(color) values ('mediumblue');
insert into colores(color) values ('mediumseagreen');
insert into colores(color) values ('mediumspringgreen');
insert into colores(color) values ('mediumturquoise');
insert into colores(color) values ('mediumvioletred');
insert into colores(color) values ('midnightblue');
insert into colores(color) values ('mistyrose');
insert into colores(color) values ('moccasin');
insert into colores(color) values ('navy');
insert into colores(color) values ('olive');
insert into colores(color) values ('olivedrab');
insert into colores(color) values ('orange');
insert into colores(color) values ('orangered');
insert into colores(color) values ('orchid');
insert into colores(color) values ('paleturquoise');
insert into colores(color) values ('palevioletred');
insert into colores(color) values ('papayawhip');
insert into colores(color) values ('peachpuff');
insert into colores(color) values ('peru');
insert into colores(color) values ('pink');
insert into colores(color) values ('plum');
insert into colores(color) values ('powderblue');
insert into colores(color) values ('red');
insert into colores(color) values ('royalblue');
insert into colores(color) values ('salmon');
insert into colores(color) values ('yellow');
insert into colores(color) values ('yellowgreen');






*/



--// FUNCIONES

-- Funcion para agregar color
CREATE OR REPLACE FUNCTION get_color
  RETURN varchar
IS
  l_empnos varchar(20);
BEGIN
  SELECT color
    INTO l_empnos
    FROM colores 
	ORDER BY color DESC FETCH NEXT 1 ROWS ONLY;
    
    delete from colores where color = l_empnos;
    
  RETURN l_empnos;
END;

create or replace PROCEDURE insert_deporte(nombre_deporte varchar)
IS
  
BEGIN
    insert into deporte (nombre,color) VALUES (nombre_deporte,get_color);
END;



-- FUNCON JORNADA
create or replace PROCEDURE insert_jornada(njornada number, temp varchar)
as
  l_exst number;
BEGIN
    select count (*) into l_exst from jornada where numero_jornada = njornada and id_temporada =(select id_temporada from temporada where nombre=temp) ;
    if l_exst = 0 then 
        insert into jornada (numero_jornada,estado,id_fase,id_temporada) VALUES (njornada,0,(select id_fase from fase where nombre = 'finalizada'),(select id_temporada from temporada where nombre=temp));
    END IF;
END;

--execute insert_temporada('Inicio2', '01/04/2021','30/04/2021');

-- funcion inserta partido
select * from partido;
create or replace PROCEDURE insert_partido
(pequipo_local varchar, pequipo_visitante varchar, ppuntos_local number,ppuntos_visitante number,pfecha_partido varchar,pid_deporte varchar,pn_jornada number, ptemp varchar)
as
  l_exst number;

BEGIN
    select count (*) into l_exst from partido where equipo_local =(select id_equipo from equipo where nombre=pequipo_local) and
    equipo_visitante = (select id_equipo from equipo where nombre=pequipo_visitante) and
    id_deporte = (select id_deporte from deporte where nombre=pid_deporte) and 
    fecha_partido = TO_DATE(pfecha_partido,'dd/mm/yyyy HH24:MI') and
    id_jornada = (select id_jornada from jornada where numero_jornada=pn_jornada and id_temporada = (select id_temporada from temporada where nombre = ptemp));
    
    if l_exst = 0 then 
        insert into partido (equipo_local,equipo_visitante,puntos_local,puntos_visitante,fecha_partido,id_deporte,id_jornada) 
    VALUES (
        (select id_equipo from equipo where nombre=pequipo_local),
        (select id_equipo from equipo where nombre=pequipo_visitante),
        ppuntos_local,
        ppuntos_visitante,
        TO_DATE(pfecha_partido,'dd/mm/yyyy HH24:MI'),
        (select id_deporte from deporte where nombre=pid_deporte),
        (select id_jornada from jornada where numero_jornada=pn_jornada and id_temporada = (select id_temporada from temporada where nombre = ptemp)));
    END IF;
END;

--
--

create or replace  PROCEDURE insert_prediccion
(pusername varchar,pequipo_local varchar, pequipo_visitante varchar, pid_deporte varchar,  pfecha_partido varchar,pn_jornada number, ptemp varchar,ppuntos_local number,ppuntos_visitante number,ppuntos number)
as
BEGIN

    insert into prediccion (id_usuario,id_partido,puntos_local,puntos_visitante,puntos)
    VALUES ( (select id_usuario from usuario where username = pusername),(select id_partido  from partido where  equipo_local =(select id_equipo from equipo where nombre=pequipo_local) and equipo_visitante = (select id_equipo from equipo where nombre=pequipo_visitante) and id_deporte = (select id_deporte from deporte where nombre=pid_deporte) and fecha_partido = TO_DATE(pfecha_partido,'dd/mm/yyyy HH24:MI') and  id_jornada = (select id_jornada from jornada where numero_jornada=pn_jornada and id_temporada = (select id_temporada from temporada where nombre = ptemp))), ppuntos_local,ppuntos_visitante  ,ppuntos );
END;



-- FUNCIONES PARA SACAR LOS TOP
select * from temporada; --564
select * from jornada where id_temporada= 564; --8 
select * from partido where id_jornada = 8; -- 22

select * from usuario;
select * from prediccion where id_usuario = 98 and id_partido = 22;


execute agregar_puntos(564,98,5);
select * from puntaje;
--delete from puntaje;
commit work;

create or replace  PROCEDURE agregar_puntos
(pid_temporada number, pid_usuario number, ppuntos number )
as
  l_exst number;
  puntos_acum number;
  acum number;

BEGIN
    select count(*) into l_exst from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;

    if l_exst = 0 then 
        if ppuntos = 0 then
            insert into puntaje (id_usuario, id_temporada,p0,puntos) values (pid_usuario,pid_temporada,1,ppuntos);
        ELSIF ppuntos = 3 THEN
            insert into puntaje (id_usuario, id_temporada,p3,puntos) values (pid_usuario,pid_temporada,1,ppuntos);
        ELSIF ppuntos = 5 THEN
            insert into puntaje (id_usuario, id_temporada,p5,puntos) values (pid_usuario,pid_temporada,1,ppuntos);
        ELSIF ppuntos = 10 THEN
            insert into puntaje (id_usuario, id_temporada,p10,puntos) values (pid_usuario,pid_temporada,1,ppuntos);
        END IF;
    ELSE
         if ppuntos = 0 then
            select p0 into acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            select puntos into puntos_acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            puntos_acum := puntos_acum + ppuntos;
            acum := acum + 1;
            update puntaje set puntos = puntos_acum, p0 = acum where id_temporada  = pid_temporada and id_usuario = pid_usuario;
        ELSIF ppuntos = 3 THEN
            select p3 into acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            select puntos into puntos_acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            puntos_acum := puntos_acum + ppuntos;
            acum := acum + 1;
            update puntaje set puntos = puntos_acum, p3 = acum where id_temporada  = pid_temporada and id_usuario = pid_usuario;

        ELSIF ppuntos = 5 THEN
            select p5 into acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            select puntos into puntos_acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            puntos_acum := puntos_acum + ppuntos;
            acum := acum + 1;
            update puntaje set puntos = puntos_acum, p5 = acum where id_temporada  = pid_temporada and id_usuario = pid_usuario;
        ELSIF ppuntos = 10 THEN
            select p10 into acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            select puntos into puntos_acum  from puntaje where id_temporada  = pid_temporada and id_usuario = pid_usuario;
            puntos_acum := puntos_acum + ppuntos;
            acum := acum + 1;
            update puntaje set puntos = puntos_acum, p10 = acum where id_temporada  = pid_temporada and id_usuario = pid_usuario;
        END IF;
    END IF;
END;

select * from temporada;
select * from puntaje;
commit work;


create or replace  PROCEDURE proceso_usuario
as
BEGIN
    FOR aRow IN (select id_usuario from usuario)
    LOOP
        proceso_temporada(aRow.id_usuario);
    end LOOP;
END;



create or replace  PROCEDURE proceso_temporada
(pid_user number)
as
BEGIN
    FOR aRow IN (select id_temporada from temporada)
    LOOP
        proceso_jornada(pid_user,aRow.id_temporada);
    end LOOP;
END;



create or replace  PROCEDURE proceso_jornada
(pid_user number, pid_temp number)
as
BEGIN
    FOR aRow IN (select id_jornada from jornada where id_temporada = pid_temp)
    LOOP
        proceso_partida(pid_user,pid_temp,aRow.id_jornada);
    end LOOP;
END;

create or replace  PROCEDURE proceso_partida
(pid_user number, pid_temp number,pid_jorn number)
as
BEGIN
    FOR aRow IN (select id_partido from partido where id_jornada = pid_jorn)
    LOOP
        proceso_predeccion(pid_user,pid_temp,aRow.id_partido);
    end LOOP;
END;


create or replace  PROCEDURE proceso_predeccion
(pid_user number, pid_temp number,pid_part number)
as
BEGIN
    FOR col_pre IN (select * from prediccion where id_partido = pid_part and id_usuario = pid_user)
    LOOP
        agregar_puntos(pid_temp,pid_user,col_pre.puntos);
    end LOOP;
END;


commit work;
execute proceso_usuario;
select * from puntaje;

select * from temporada;
delete from puntaje;

